# A base production.ini which you can include in your app.
# Do not use standalone.

[app:main]
websauna.site_production = true
websauna.cachebust = true
pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm

# Assume we have postfix configured on the local machine
# http://opensourcehacker.com/2013/03/26/using-postfix-and-free-mandrill-email-service-for-smtp-on-ubuntu-linux-server/
websauna.mailer = mail
mail.host = localhost
mail.port = 25
mail.username =
mail.password =


[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/logging.html
###

[loggers]
keys = root, trees, sqlalchemy, celery_worker_job

[handlers]
keys = console, sentry, file

[formatters]
keys = generic

[logger_root]
level = ERROR
handlers = console, sentry, file

[logger_trees]
level = DEBUG
handlers =
qualname = trees

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = rainbow_logging_handler.RainbowLoggingHandler
args = (sys.stderr,)
level = WARNING
format = [%(asctime)s] %(name)s %(funcName)s():%(lineno)d\t%(message)s

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[handler_file]
class = FileHandler
args = ('logs/trees.log','a')
level = INFO
formatter = generic

[handler_sentry]
class = raven.handlers.logging.SentryHandler
args = ('https://0f519f367f1140d6a7894fa2d5f40997:603ace05a3e646779fb535cbb4f872b7@sentry.libertymusicstore.net:443/3?verify_ssl=0',)
level = WARNING
formatter = generic

# This is the crucial bit to make sure Celery doesn't silently swallow exceptions
# See https://github.com/celery/celery/issues/2437
# http://stackoverflow.com/a/20719461/315168
[logger_celery_worker_job]
level = INFO
handlers =
qualname = celery.worker.job
propagate = 1


