###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/environment.html
###


[includes]
include_ini_files =
    resource://websauna/base.ini

[app:main]
use = egg:websauna

pyramid.reload_templates = true
pyramid.debug_authorization = true
pyramid.debug_notfound = true
pyramid.debug_routematch = true
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_mailer
    pyramid_tm
    pyramid_debugtoolbar

sqlalchemy.url = postgresql://localhost/websauna

# We log all emails to console anyway
mail.default_sender = no-reply@example.com
websauna.mailer = websauna.system.mail.StdoutMailer

# No websockets proxies for localhost
pyramid_notebook.websocket_proxy =
pyramid_notebook.alternative_domain =


# Where do we read secret variables
websauna.secrets_file = resource://websauna/secrets.ini

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/logging.html
###

[loggers]
keys = root, sqlalchemy, chameleon, transaction, pyramid_debug, pyramid_notebook_proxy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console

[logger_websauna]
level = DEBUG
handlers =
qualname = websauna

# Output from transaction manager commits
[logger_transaction]
level = WARN
handlers =
qualname = txn

# Output from Deform template cooking
[logger_chameleon]
level = WARN
qualname = chameleon.template
handlers =

# Pyramid router debug info
[logger_pyramid_debug]
level = INFO
qualname = pyramid_debug
handlers =


[logger_pyramid_notebook_proxy]
level = DEBUG
qualname = pyramid_notebook.proxy
handlers =


[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)



[handler_console]
class = rainbow_logging_handler.RainbowLoggingHandler
# class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
